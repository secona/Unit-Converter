{"version":3,"sources":["components/ConverterSelector.js","components/Panel.js","components/ConverterInput.js","functions/CalculateValue.js","components/ConverterOutput.js","components/Converter.js","components/Panels.js","App.js","index.js"],"names":["ConverterSelector","systemsName","panel","Select","fullWidth","variant","size","style","marginBottom","value","activePanel","onChange","e","setActivePanel","target","map","systemName","MenuItem","Panel","index","children","hidden","ConverterInput","input","unitsNames","Grid","item","xs","TextField","label","type","newValue","Number","setValue","setUnit","unit","CalculateValue","ratio","targetUnit","targetRatio","Decimal","inputRatio","inputValue","dividedBy","times","toLocaleString","ConverterOutput","units","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","names","unitName","scope","Converter","unitsRatio","React","useState","Object","keys","container","spacing","Panels","systems","App","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b0c1a47.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Select, MenuItem, Grid } from \"@material-ui/core\";\r\n\r\nfunction ConverterSelector({ systemsName, panel }) {\r\n  const styles = {\r\n    marginBottom: \"10px \"\r\n  };\r\n\r\n  return (\r\n    <Select \r\n      fullWidth\r\n      variant=\"outlined\"\r\n      size=\"\"\r\n      style={styles}\r\n      value={panel.activePanel}\r\n      onChange={e => panel.setActivePanel(e.target.value)}\r\n    >\r\n      {systemsName.map(systemName => (\r\n        <MenuItem value={systemName} key={systemName}>\r\n          {systemName} Converter\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport default ConverterSelector;","import React from \"react\";\r\n\r\nfunction Panel({activePanel, index, children}) {\r\n  return (\r\n    <div hidden={activePanel !== index}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Panel;","import React from \"react\";\r\nimport { TextField, Select, MenuItem, Grid } from \"@material-ui/core\";\r\n\r\nfunction ConverterInput({ input, unitsNames }) {\r\n  const HandleChange = (e) => {\r\n    const newValue = Number(e.target.value) || null;\r\n    input.setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs>\r\n        <TextField\r\n          label=\"Value\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={input.value}\r\n          type=\"number\"\r\n          onChange={HandleChange}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Select\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          onChange={e => input.setUnit(e.target.value)}\r\n          value={input.unit}\r\n        >\r\n          {unitsNames.map(item => (\r\n            <MenuItem value={item}>{item}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConverterInput;\r\n","import { Decimal } from \"decimal.js\";\r\n\r\nfunction CalculateValue(ratio, input, targetUnit) {\r\n  if (!input.value) return 0;\r\n\r\n  const targetRatio = new Decimal(ratio[targetUnit]);\r\n  const inputRatio = ratio[input.unit];\r\n  const inputValue = input.value;\r\n\r\n  return Number(targetRatio\r\n    .dividedBy(inputRatio)\r\n    .times(inputValue))\r\n    .toLocaleString();\r\n}\r\n\r\nexport default CalculateValue;\r\n","import React from \"react\";\r\nimport {\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Table,\r\n  Paper,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport CalculateValue from \"../functions/CalculateValue\";\r\n\r\nfunction ConverterOutput({ units, input }) {\r\n  return (\r\n    <Grid item xs>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Unit</TableCell>\r\n              <TableCell align=\"right\">Value</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {units.names.map(unitName => (\r\n              <TableRow>\r\n                <TableCell scope=\"row\">{unitName}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {CalculateValue(units.ratio, input, unitName)}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ConverterOutput;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ConverterInput from \"./ConverterInput\";\r\nimport ConverterOutput from \"./ConverterOutput\";\r\n\r\nfunction Converter({ unitsRatio }) {\r\n  const [unitsNames] = React.useState(Object.keys(unitsRatio));\r\n\r\n  const [value, setValue] = React.useState(10);\r\n  const [unit, setUnit] = React.useState(unitsNames[0]);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid container item spacing={1}>\r\n        <ConverterInput\r\n          input={{ value, setValue, unit, setUnit }}\r\n          unitsNames={unitsNames}\r\n        />\r\n      </Grid>\r\n      <Grid container item>\r\n        <ConverterOutput\r\n          units={{\r\n            names: unitsNames,\r\n            ratio: unitsRatio\r\n          }}\r\n          input={{ value, unit }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Converter;\r\n","import React from \"react\";\r\nimport Panel from \"./Panel\";\r\nimport Converter from \"./Converter\";\r\n\r\nfunction Panels({ systems, activePanel }) {\r\n  return (\r\n    <>\r\n      {Object.keys(systems).map(systemName => (\r\n        <Panel activePanel={activePanel} index={systemName} key={systemName}>\r\n          <Converter unitsRatio={systems[systemName]} />\r\n        </Panel>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Panels;\r\n","import React from \"react\";\nimport ConverterSelector from \"./components/ConverterSelector\";\nimport Panels from \"./components/Panels\";\nimport \"./style.css\";\nimport { Container } from \"@material-ui/core\";\nimport systems from \"./measurementSystems.json\";\n\nexport default function App() {\n  const [activePanel, setActivePanel] = React.useState(\"Weight\");\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <ConverterSelector \n          systemsName={Object.keys(systems)}\n          panel={{activePanel, setActivePanel}}\n        />\n        <Panels \n          systems={systems} \n          activePanel={activePanel}\n        />\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}