{"version":3,"sources":["components/ConverterInput.js","functions/CalculateValue.js","components/ConverterOutput.js","components/Converter.js","App.js","index.js"],"names":["ConverterInput","input","unitsNames","Grid","item","xs","TextField","label","variant","fullWidth","value","type","onChange","e","newValue","Number","target","setValue","Select","size","setUnit","unit","map","MenuItem","CalculateValue","ratio","targetUnit","targetRatio","Decimal","inputRatio","inputValue","dividedBy","times","toString","ConverterOutput","units","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","names","unitName","scope","Converter","unitsRatio","React","useState","Object","keys","container","spacing","weight","Kilogram","Hectogram","Decagram","Gram","Decigram","Centigram","Milligram","App","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"qPAsCeA,MAnCf,YAAgD,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAM/B,OACE,qCACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,WAAS,EACTC,MAAOT,EAAMS,MACbC,KAAK,SACLC,SAda,SAACC,GACpB,IAAMC,EAAWC,OAAOF,EAAEG,OAAON,QAAU,KAC3CT,EAAMgB,SAASH,QAeb,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACa,EAAA,EAAD,CACEV,QAAQ,WACRW,KAAK,QACLV,WAAS,EACTG,SAAU,SAAAC,GAAC,OAAIZ,EAAMmB,QAAQP,EAAEG,OAAON,QACtCA,MAAOT,EAAMoB,KALf,SAOGnB,EAAWoB,KAAI,SAAAlB,GAAI,OAClB,cAACmB,EAAA,EAAD,CAAUb,MAAON,EAAjB,SAAwBA,e,uECfrBoB,MAbf,SAAwBC,EAAOxB,EAAOyB,GACpC,IAAKzB,EAAMS,MAAO,OAAO,EAEzB,IAAMiB,EAAc,IAAIC,UAAQH,EAAMC,IAChCG,EAAaJ,EAAMxB,EAAMoB,MACzBS,EAAa7B,EAAMS,MAEzB,OAAOiB,EACJI,UAAUF,GACVG,MAAMF,GACNG,YC4BUC,MA3Bf,YAA4C,IAAjBC,EAAgB,EAAhBA,MAAOlC,EAAS,EAATA,MAChC,OACE,cAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAE,EAAb,SACE,cAAC+B,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,wBAGJ,cAACC,EAAA,EAAD,UACGT,EAAMU,MAAMvB,KAAI,SAAAwB,GAAQ,OACvB,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWK,MAAM,MAAjB,SAAwBD,IACxB,cAACJ,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACGnB,EAAeW,EAAMV,MAAOxB,EAAO6C,qBCGvCE,MA3Bf,YAAoC,IAAfC,EAAc,EAAdA,WAAc,EACZC,IAAMC,SAASC,OAAOC,KAAKJ,IAAzC/C,EAD0B,sBAGPgD,IAAMC,SAAS,IAHR,mBAG1BzC,EAH0B,KAGnBO,EAHmB,OAITiC,IAAMC,SAASjD,EAAW,IAJjB,mBAI1BmB,EAJ0B,KAIpBD,EAJoB,KAMjC,OACE,eAACjB,EAAA,EAAD,CAAMmD,WAAS,EAACC,QAAS,EAAzB,UACE,cAACpD,EAAA,EAAD,CAAMmD,WAAS,EAAClD,MAAI,EAACmD,QAAS,EAA9B,SACE,cAAC,EAAD,CACEtD,MAAO,CAAES,QAAOO,WAAUI,OAAMD,WAChClB,WAAYA,MAGhB,cAACC,EAAA,EAAD,CAAMmD,WAAS,EAAClD,MAAI,EAApB,SACE,cAAC,EAAD,CACE+B,MAAO,CACLU,MAAO3C,EACPuB,MAAOwB,GAEThD,MAAO,CAAES,QAAOW,gB,iBCpBpBmC,EAAS,CACbC,SAAU,EACVC,UAAW,GACXC,SAAU,IACVC,KAAM,IACNC,SAAU,IACVC,UAAW,IACXC,UAAW,KAGE,SAASC,IACtB,OACE,mCACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,EAAD,CAAWjB,WAAYO,QCd/BW,IAASC,OAAO,cAACJ,EAAD,IAASK,SAASC,eAAe,W","file":"static/js/main.606af982.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { TextField, Select, MenuItem, Grid } from \"@material-ui/core\";\r\n\r\nfunction ConverterInput({ input, unitsNames }) {\r\n  const HandleChange = (e) => {\r\n    const newValue = Number(e.target.value) || null;\r\n    input.setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs>\r\n        <TextField\r\n          label=\"Value\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={input.value}\r\n          type=\"number\"\r\n          onChange={HandleChange}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Select\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          onChange={e => input.setUnit(e.target.value)}\r\n          value={input.unit}\r\n        >\r\n          {unitsNames.map(item => (\r\n            <MenuItem value={item}>{item}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConverterInput;\r\n","import { Decimal } from \"decimal.js\";\r\n\r\nfunction CalculateValue(ratio, input, targetUnit) {\r\n  if (!input.value) return 0;\r\n\r\n  const targetRatio = new Decimal(ratio[targetUnit]);\r\n  const inputRatio = ratio[input.unit];\r\n  const inputValue = input.value;\r\n\r\n  return targetRatio\r\n    .dividedBy(inputRatio)\r\n    .times(inputValue)\r\n    .toString();\r\n}\r\n\r\nexport default CalculateValue;\r\n","import React from \"react\";\r\nimport {\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Table,\r\n  Paper,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport CalculateValue from \"../functions/CalculateValue\";\r\n\r\nfunction ConverterOutput({ units, input }) {\r\n  return (\r\n    <Grid item xs>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Unit</TableCell>\r\n              <TableCell align=\"right\">Value</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {units.names.map(unitName => (\r\n              <TableRow>\r\n                <TableCell scope=\"row\">{unitName}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {CalculateValue(units.ratio, input, unitName)}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ConverterOutput;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ConverterInput from \"./ConverterInput\";\r\nimport ConverterOutput from \"./ConverterOutput\";\r\n\r\nfunction Converter({ unitsRatio }) {\r\n  const [unitsNames] = React.useState(Object.keys(unitsRatio));\r\n\r\n  const [value, setValue] = React.useState(10);\r\n  const [unit, setUnit] = React.useState(unitsNames[0]);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid container item spacing={1}>\r\n        <ConverterInput\r\n          input={{ value, setValue, unit, setUnit }}\r\n          unitsNames={unitsNames}\r\n        />\r\n      </Grid>\r\n      <Grid container item>\r\n        <ConverterOutput\r\n          units={{\r\n            names: unitsNames,\r\n            ratio: unitsRatio\r\n          }}\r\n          input={{ value, unit }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Converter;\r\n","import React from \"react\";\nimport Converter from \"./components/Converter.js\";\nimport \"./style.css\";\nimport { Container } from \"@material-ui/core\";\n\nconst weight = {\n  Kilogram: 1,\n  Hectogram: 10,\n  Decagram: 100,\n  Gram: 1000,\n  Decigram: 10000,\n  Centigram: 100000,\n  Milligram: 1000000\n};\n\nexport default function App() {\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Converter unitsRatio={weight}/>\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}